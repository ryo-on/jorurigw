<%# app/view/system/admin/groups/_form.html %>
<%#= hidden_field_tag  'parent'  ,@parent.id %>
<%#= f.hidden_field  :parent_id    ,:value=>@parent.id %>
<%#= f.hidden_field  :level_no     ,:value=>@parent.level_no.to_i + 1 %>
<%#= f.hidden_field  :ldap_version ,:value=>@item.ldap_version %>
<%#= f.hidden_field  :ldap         ,:value=>@item.ldap %>
<%#= f.hidden_field  :version_id   ,:value=>@item.version_id %>
<%= required_head %>
<table class="show">
<tr>
  <th>関連づけるユーザー</th>
  <td>
    <%= render :partial => '/gw/admin/pref_executive_admins/form_user', :locals => {:f => f} %>
  </td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
  var add_users = function() {
    add_list('item_schedule_users_uid', 'item_schedule_users_add_buf')
  }
  var del_users = function() {
    del_list('item_schedule_users_add_buf')
  }
  var add_list = function(fr_id, to_id) {
    var fr = $(fr_id);
    var idxs = select_options_selected_indexes(fr);
    var to = $(to_id);
    for (var i = 0; i < idxs.length; i++)
      select_options_push(to, fr[idxs[i]].value, fr[idxs[i]].innerHTML, fr[idxs[i]].title);
  };
  var del_list = function(fr_id) {
    var fr = $(fr_id);
    var vals = select_options_selected_values(fr);
    for (var i = 0; i < vals.length; i++)
      select_options_delete(fr, vals[i]);
  };
  var set_users_json = function() {
    var fr = $('item_schedule_users_add_buf');
    var ary = [];
    for (var i = 0; i < fr.options.length; i++)
      ary.push([fr[i].title, fr[i].value, fr[i].innerHTML]);
    var to = $('item_schedule_users_json');
    to.value = Object.toJSON(ary);
  }
  var my_submit = function() {
    var fr = $('item_schedule_users_add_buf');
    var ary = [];
    for (var i = 0; i < fr.options.length; i++)
      ary.push([fr[i].title, fr[i].value, fr[i].innerHTML]);
    var to = $('item_schedule_users_json');
    to.value = Object.toJSON(ary);
    fr.selectedIndex = -1; // fr の送信を抑止

    $('itemForm').submit();
  }
  var my_load_core = function(mode) {

  if (mode == 'user') {{
      var u = $('init_schedule_users_json');
      var to = $('item_schedule_users_add_buf');
    }
    if ( u != undefined && u.value != '') {
      var roles = eval(u.value);
      for (var i = 0; i < roles.length; i++) {
      if (mode == 'user') {
      select_options_push(to, roles[i][1], roles[i][2], roles[i][0], roles[i][3], roles[i][4], roles[i][5], roles[i][6], roles[i][7]);
    } else {
      select_options_push(to, roles[i][1], roles[i][2], roles[i][0]);
    }
      }
    }
  }
}

  var update_user_cand = function () {
    var fr = $('item_schedule_users_user_type_id');
    var genre = fr.options[fr.selectedIndex].value;
    url = '/gw/schedule_users/getajax.json?s_genre=' + genre + '&' + time_serial();
    var to = $('item_schedule_users_uid');
    ajax_request(url, function(r){
      to.options.length = 0;
      for (var i=0; i<xha.length; i++) {
        xh = xha[i];
        to.options[i] = new Option(xh[2], xh[1]);
        to.options[i].title = xh[0];
      }
    });
  }

var my_load = function() {
  my_load_core('user');
}

window.onload = my_load;



//]]>
</script>
<%= raw(gw_js_include_full) %>